---
# WSL2-specific configuration tasks

- name: "ü™ü Configure WSL2-specific settings"
  when: platform_key == 'wsl'
  block:
    - name: "üîç Check if we're running in WSL2"
      shell: |
        if grep -qEi "(Microsoft|WSL)" /proc/version; then
          if grep -q "WSL2" /proc/version; then
            echo "WSL2"
          else
            echo "WSL1"
          fi
        else
          echo "Not WSL"
        fi
      register: wsl_version
      changed_when: false

    - name: "üìã Display WSL version"
      debug:
        msg: "Detected: {{ wsl_version.stdout }}"

    - name: "‚öôÔ∏è Configure Windows PATH integration"
      lineinfile:
        path: "{{ ansible_env.HOME }}/.{{ ansible_env.SHELL | basename }}rc"
        line: "export PATH=\"$PATH:/mnt/c/Windows/System32:/mnt/c/Program Files/Git/cmd\""
        create: yes
      when: wsl_config.enable_windows_path_integration | default(true)

    - name: "üîó Create Windows integration aliases"
      lineinfile:
        path: "{{ ansible_env.HOME }}/.{{ ansible_env.SHELL | basename }}rc"
        line: "alias {{ item.alias }}='{{ item.command }}'"
        create: yes
      loop:
        - { alias: "cmd", command: "cmd.exe" }
        - { alias: "powershell", command: "powershell.exe" }
        - { alias: "explorer", command: "explorer.exe" }
        - { alias: "clip", command: "clip.exe" }
        - { alias: "notepad", command: "notepad.exe" }
      when: wsl_config.configure_windows_integration | default(true)

    - name: "üåê Set Windows browser as default"
      lineinfile:
        path: "{{ ansible_env.HOME }}/.{{ ansible_env.SHELL | basename }}rc"
        line: "export BROWSER='/mnt/c/Program Files/Google/Chrome/Application/chrome.exe'"
        create: yes
      when: wsl_config.configure_windows_integration | default(true)

    - name: "üìÅ Create symbolic links to common Windows directories"
      file:
        src: "/mnt/c/Users/{{ ansible_user }}/{{ item.source }}"
        dest: "{{ ansible_env.HOME }}/{{ item.dest }}"
        state: link
        force: yes
      loop:
        - { source: "Desktop", dest: "desktop" }
        - { source: "Documents", dest: "documents" }
        - { source: "Downloads", dest: "downloads" }
      ignore_errors: yes
      when: wsl_config.configure_windows_integration | default(true)

    - name: "üîß Configure WSL2 performance settings"
      when: wsl_version.stdout == "WSL2"
      block:
        - name: "üìù Configure .wslconfig (user-specific)"
          copy:
            content: |
              # WSL2 Configuration
              # Generated by NeoSetup

              [wsl2]
              # Memory allocation (4GB)
              memory=4GB
              # Processor count
              processors={{ ansible_processor_vcpus | default(2) }}
              # Enable swap
              swap={{ '2GB' if wsl_config.configure_swap | default(true) else '0' }}
              # Enable localhost forwarding
              localhostForwarding=true
              # Enable nested virtualization
              nestedVirtualization={{ 'true' if wsl_config.enable_gpu_support | default(false) else 'false' }}
            dest: "/mnt/c/Users/{{ ansible_user }}/.wslconfig"
            mode: '0644'
          ignore_errors: yes

    - name: "‚úÖ WSL2 configuration complete"
      debug:
        msg: |
          WSL2 configuration completed successfully
          Version: {{ wsl_version.stdout }}
          Windows integration: Enabled
          Performance optimizations: Applied

          Restart WSL2 to apply .wslconfig changes:
          wsl --shutdown (from Windows)
          wsl (to restart)
