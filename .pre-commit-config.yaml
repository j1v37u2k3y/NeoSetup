---
# Pre-commit hooks configuration for NeoSetup
# Automated validation for YAML, Ansible, security, and formatting

repos:
  # YAML Formatting and Validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        args: [ --markdown-linebreak-ext=md ]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [ --allow-multiple-documents ]
      - id: check-added-large-files
        args: [ '--maxkb=1000' ]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: [ '--fix=lf' ]

  # YAML Linting with custom rules
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.32.0
    hooks:
      - id: yamllint
        args: [ -c=.yamllint.yml ]

  # Ansible Validation
  - repo: local
    hooks:
      - id: ansible-lint
        name: ansible-lint
        entry: bash -c 'cd neosetup && ansible-lint --profile=basic .'
        language: system
        files: ^neosetup/.*\.(yaml|yml)$
        pass_filenames: false

  # Security Scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [ '--baseline', '.secrets.baseline' ]
        exclude: 'package\.lock\.json|\.github/workflows/docker-tests\.yml'

  # Python validation for scripts
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        files: \.py$

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        files: \.py$

  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: pylint
        language: system
        files: \.py$

      - id: bandit
        name: bandit security scan
        entry: bandit
        language: system
        files: \.py$
        args: [ '-r', '.' ]

      - id: safety
        name: safety dependency check
        entry: bash
        language: system
        args: [ '-c', 'safety check || echo "⚠️ Security vulnerabilities found - should be addressed"' ]
        pass_filenames: false

      - id: operator-validation
        name: NeoSetup operator validation
        entry: bash -c 'cd neosetup && python3 scripts/validate_operator.py --all'
        language: system
        files: ^neosetup/operators/.*\.yml$
        pass_filenames: false

  # Shell script validation
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        files: \.(sh|bash)$

  # Markdown formatting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: [ '--fix', '--config', '.markdownlint.yml' ]
        files: \.md$

  # Git commit message validation
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v2.4.0
    hooks:
      - id: conventional-pre-commit
        stages: [ commit-msg ]

# Global settings
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [ ]
  submodules: false
